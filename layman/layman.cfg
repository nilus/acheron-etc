[MAIN]

#-----------------------------------------------------------
# Defines the directory where overlays should be installed

storage   : /var/lib/layman

#-----------------------------------------------------------
# Remote overlay lists will be stored here
# layman will append _md5(url).xml to each filename

cache     : %(storage)s/cache

#-----------------------------------------------------------
# The list of locally installed overlays

local_list: %(storage)s/overlays.xml

#-----------------------------------------------------------
# Path to the make.conf file that should be modified by 
# layman

make_conf : %(storage)s/make.conf

#-----------------------------------------------------------
# URLs of the remote lists of overlays (one per line) or 
# local overlay definitions
#
#overlays  : http://www.gentoo.org/proj/en/overlays/repositories.xml
#            http://dev.gentoo.org/~wrobel/layman/global-overlays.xml
#            http://mydomain.org/my-layman-list.xml
#            file:///var/lib/layman/my-list.xml

overlays  : http://www.gentoo.org/proj/en/overlays/repositories.xml

#-----------------------------------------------------------
# Proxy support
# If unset, layman will use the http_proxy environment variable.
#
#proxy  : http://[user:pass@]www.my-proxy.org:3128

#-----------------------------------------------------------
# Strict checking of overlay definitions
#
# Set either to "yes" or "no". If "no" layman will issue
# warnings if an overlay definition is missing either 
# description or contact information.
#
nocheck  : yes

#-----------------------------------------------------------
# Umask settings
#
# layman should usually work with a umask of 0022. You should
# only change this setting if you are absolutely certain that
# you know what you are doing.
#
#umask  : 0022

#-----------------------------------------------------------
# Command overrides
#
# You can have commands point to either a binary at a different
# location, e.g.
#
#   /home/you/local/bin/git
#
# or just the command, e.g.
#
#   git
#
# to use PATH-based resolution of the binary to call.
#
#bzr_command        : /usr/bin/bzr
#cvs_command        : /usr/bin/cvs
#darcs_command      : /usr/bin/darcs
#git_command        : /usr/bin/git
#mercurial_command  : /usr/bin/hg
#rsync_command      : /usr/bin/rsync
#svn_command        : /usr/bin/svn
#tar_command        : /bin/tar
